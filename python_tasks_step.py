
# 1. Счастливая последовательность 1
""" В популярном сериале «Остаться в живых» использовалась последовательность чисел 4 8 15 16 23 42, 
которая принесла героям удачу и помогла сорвать джекпот в лотерее. 
Напишите программу, которая выводит данную последовательность чисел с одним пробелом между ними. """
print(4, 8, 15, 16, 23, 42)

# 2. Счастливая последовательность 2
""" Измените предыдущую программу так, чтобы каждое число последовательности 4 8 15 16 23 424 8 15 16 23 42 
печаталось на отдельной строке.
Примечание. Каждая последующая команда print() выводит указанный текст, начиная с новой строки. """
print(4)
print(8)
print(15)
print(16)
print(23)
print(42)

# 3. Звездный треугольник
""" Напишите программу, которая выводит указанный треугольник, состоящий из звездочек (*).
Sample Output:
*
**
***
****
*****
******
*******                                                              """

print("*")
print("**")
print("***")
print("****")
print("*****")
print("******")
print("*******")

# 4. Приветствие
""" На вход программе подается строка текста – имя человека. 
Напишите программу, которая принимает эту строку текста через стандартный поток ввода. 
Далее программа должна выводить на экран приветствие в виде слова «Привет» (без кавычек), после которого 
должна стоять запятая и пробел, а затем – введенное имя. """
name = input()
print("Привет,", name)

# 5. Любимая команда
""" На вход программе подается строка текста – название футбольной команды. 
Напишите программу, которая принимает через стандартный поток ввода эту строку и печатает ее на экране 
со словами « - чемпион!» (без кавычек). """
team = input()
print(team, '- чемпион!')

# 6. Повторяй за мной
""" Напишите программу, которая считывает три строки по очереди, а затем выводит их в той же 
последовательности, каждую на отдельной строчке. """
first_word = input()
second_word = input()
third_word = input()
print(first_word)
print(second_word)
print(third_word)

# 7. Что будет выведено на экран в результате выполнения следующего кода?
print('31', '12', '2019', sep='-')
# Ответ: 31-12-2019

# 8. Что будет выведено на экран в результате выполнения следующего кода?
print('Mercury', 'Venus', sep='*', end='!')
print('Mars', 'Jupiter', sep='**', end='?')
# Ответ: Mercury*Venus!Mars**Jupiter?

# 9. Сколько строк будет распечатано в результате выполнения следующего кода?
print('a', 'b', 'c', sep='*')
print('d', 'e', 'f', sep='**', end='')
print('g', 'h', 'i', sep='+', end='%')
print('j', 'k', 'l', sep='-', end='\n')
print('m', 'n', 'o', sep='/', end='!')
print('p', 'q', 'r', sep='1', end='%')
print('s', 't', 'u', sep='&', end='\n')
print('v', 'w', 'x', sep='%')
print('y', 'z', sep='/', end='!')
# Ответ: 5

# 10. Кастомный разделитель
""" Напишите программу, которая считывает строку-разделитель и три строки, а затем 
выводит указанные строки через разделитель. """
separator = input()
word1 = input()
word2 = input()
word3 = input()
print(word1, word2, word3, sep=separator)

# 11. Что будет напечатано в результате выполнения следующей программы?
""" 
# print('Java')
# print('Ruby')
# print('Scala')
print('Python', end='+')  # print('C++')
# print('GO')
print('C#', end='=')  # print('C')
print('awesome')
# finish
""" 
# Ответ: Python+C#=awesome

# 12. Три последовательных числа
""" Напишите программу вывода на экран трех последовательно идущих чисел, каждое на отдельной строке. 
Первое число вводит пользователь, остальные числа вы должны сами вычислять в программе. """
num1 = int(input())
print(num1)
print(num1 + 1)
print(num1 + 2)

# 13. Три последовательных числа
""" Напишите программу вывода на экран трех последовательно идущих чисел, каждое на отдельной строке. 
Первое число вводит пользователь, остальные числа вы должны сами вычислять в программе. """
num1 = int(input())
num2 = int(input())
num3 = int(input())
print(num1 + num2 + num3)

# 14. Куб
# Напишите программу, вычисляющую объем куба и площадь его полной поверхности по введенному значению длины ребра.
length1 = int(input())
volume = length1 * length1 * length1
s = 6 * length1 * length1
print('Объем =', volume)
print('Площадь полной поверхности =', s)

# 15. Значение функции
# Напишите программу вычисления значения функции f(a, b) = 3(a+b)3+275b2− 127a−41 по введенным целым значениям a и b.
a = int(input())
b = int(input())
result = 3 * ((a + b) * (a + b) * (a + b)) + 275 * b * b - 127 * a - 41
print(result)

# 16. Следующее и предыдущее
""" Напишите программу, которая считывает целое число, после чего на экран выводится 
следующее и предыдущее целое число с пояснительным текстом. """
num = int(input())
print('Следующее за числом', num, 'число:', num + 1)
print('Для числа', num, 'предыдущее число:', num - 1)

# 17. Стоимость покупки
""" Напишите программу, которая считает стоимость трех компьютеров, состоящих из монитора, 
системного блока, клавиатуры и мыши. """
monitor_price = int(input())
s_block_price = int(input())
keyboard_price = int(input())
mouse_price = int(input())
print((monitor_price + s_block_price + keyboard_price + mouse_price) * 3)

# 18. Напишите программу, в которой вычисляется сумма, разность и произведение двух целых чисел, введенных с клавиатуры.
num1 = int(input())
num2 = int(input())
print(num1, '+', num2, '=', num1 + num2)
print(num1, '-', num2, '=', num1 - num2)
print(num1, '*', num2, '=', num1 * num2)

# 19. Арифметическая прогрессия
""" Арифметической прогрессией называется последовательность чисел  a1,a2,...,an, каждое из которых, 
начиная с a2, получается из предыдущего путем прибавления к нему одного и того же постоянного числа d (разность прогрессии). 
Например, арифметической прогрессией является следующая последовательность:
−6,−3,0,3,6,9,12−6,−3,0,3,6,9,12
Если известен первый член прогрессии (a1) и её разность (d), то n-ый член арифметической прогрессии 
находится по формуле:  an = a1 + d(n−1)
Входные данные:
-> На вход программе подаётся три целых числа: a1, d и n, каждое на отдельной строке.
Выходные данные:
-> Программа должна вывести n-ый член арифметической прогрессии. """
a1 = int(input())
d = int(input())
n = int(input())
result = a1 + d * (n - 1)
print(result)

# 20. Разделяй и властвуй
""" Напишите программу, которая считывает целое положительное число x и выводит на экран 
последовательность чисел x,2x,3x,4x и 5x, разделённых тремя черточками. """
num = int(input())
print(num, num*2, num*3, num*4, num*5, sep='---')

# 21. Геометрическая прогрессия
""" Геометрической прогрессией называется последовательность чисел b1,b2,…,bn, каждое из которых, начиная 
с b2, получается из предыдущего умножением на одно и то же постоянное число q (знаменатель прогрессии).
Если известен первый член прогрессии и ее знаменатель, то n-ый член геометрической прогрессии находится по формуле   bn = b1 * q в степени n−1
Входные данные:
-> На вход программе подаётся три целых числа: 1b1, q и n, каждое на отдельной строке.
Выходные данные:
-> Программа должна вывести n-ый член геометрической прогрессии. """
b1 = int(input())
q = int(input())
n = int(input())
print(b1 * q ** (n - 1))

# 22. Расстояние в метрах
""" Напишите программу, которая находит полное число метров по заданному числу сантиметров.
Формат входных данных:
-> На вход программе подаётся натуральное число – количество сантиметров.
Формат выходных данных:
-> Программа должна вывести одно число – полное число метров. """
cm = int(input())
print(cm // 100)

# 23. Мандарины
""" n школьников делят k мандаринов поровну, неделящийся остаток остается в корзине. 
Сколько целых мандаринов достанется каждому школьнику? Сколько целых мандаринов останется в корзине?
-> Формат входных данных:
На вход программе подаётся два целых числа: количество школьников и количество мандаринов, каждое на отдельной строке.
-> Формат выходных данных:
Программа должна вывести два числа: количество мандаринов, которое достанется каждому школьнику, 
и количество мандаринов, которое останется в корзине, каждое на отдельной строке. """
n = int(input())
k = int(input())
print(k // n)
print(k % n)

# 24. Сама неотвратимость
""" Безумный титан Танос собрал все 6 камней бесконечности и намеревается уничтожить половину населения Вселенной по щелчку пальцев. 
При этом если население Вселенной является нечетным числом, то титан проявит милосердие и округлит количество выживших в большую сторону. 
Помогите Мстителям подсчитать количество выживших.
Формат входных данных:
-> На вход дается число целое n – население Вселенной.
Формат выходных данных:
-> Программа должна вывести одно число – количество выживших. """
n = int(input())
print(n // 2 + n % 2)


# 25. Номер купе
""" В купейном вагоне имеется 99 купе с четырьмя местами для пассажиров в каждом. 
Напишите программу, которая определяет номер купе, в котором находится место с заданным номером 
(нумерация мест сквозная, начинается с 11). """

num = int(input())
print((num + 3) // 4)


# 26. Пересчет временного интервала
""" Напишите программу для пересчёта величины временного интервала, заданного в минутах, 
в величину, выраженную в часах и минутах. """

min_count = int(input())
print(min_count, 'мин - это', min_count // 60, 'час', min_count % 60, 'минут.')

# 27. Трехзначное число
""" Напишите программу, в которой рассчитывается сумма и произведение цифр положительного трехзначного числа.
Формат входных данных:
-> На вход программе подаётся положительное трёхзначное число.
Формат выходных данных:
-> Программа должна вывести два числа с поясняющим текстом: сумма цифр и произведение цифр. """

num = int(input())
third_digit = num % 10
second_digit = (num // 10) % 10
first_digit = num // 100
print('Сумма цифр =', third_digit + second_digit + first_digit)
print('Произведение цифр =', third_digit * second_digit * first_digit)


# 28. Перестановка цифр
""" Дано трехзначное число abc, в котором все цифры различны. 
Напишите программу, которая выводит шесть чисел, образованных при перестановке цифр заданного числа.
Формат входных данных:
-> На вход программе подаётся положительное трёхзначное целое число, все цифры которого различны.
Формат выходных данных:
-> Программа должна вывести шесть чисел, образованных при перестановке цифр заданного числа 
в следующем порядке:  abc,acb,bac,bca,cab,cba. """

num = int(input())
c = num % 10
b = (num // 10) % 10
a = num // 100
print(a, b, c, sep='')
print(a, c, b, sep='')
print(b, a, c, sep='')
print(b, c, a, sep='')
print(c, a, b, sep='')
print(c, b, a, sep='')


# 29. Четырёхзначное число
""" Напишите программу для нахождения цифр четырёхзначного числа.
Формат входных данных:
-> На вход программе подаётся положительное четырёхзначное целое число.
Формат выходных данных:
-> Программа должна вывести текст в соответствии с условием задачи.
Sample Input 1:
 3281
Sample Output 1:
 Цифра в позиции тысяч равна 3
 Цифра в позиции сотен равна 2
 Цифра в позиции десятков равна 8
 Цифра в позиции единиц равна 1       """

num = int(input())
fourth_digit = num % 10
third_digit = (num % 100) // 10
second_digit = (num % 1000) // 100
first_digit = num // 1000
print('Цифра в позиции тысяч равна', first_digit)
print('Цифра в позиции сотен равна', second_digit)
print('Цифра в позиции десятков равна', third_digit)
print('Цифра в позиции единиц равна', fourth_digit)

# 30. Звездный прямоугольник
""" Напишите программу, которая выводит прямоугольник, по периметру состоящий из звездочек (*).
Примечание. Высота и ширина прямоугольника равны 4 и 17 звёздочкам соответственно. """
print('*****************')
print('*               *')
print('*               *')
print('*****************')

# 31. Сумма квадратов VS квадрат суммы
""" Напишите программу, которая считывает два целых числа a и b и выводит на экран квадрат суммы (a+b)2 
и сумму квадратов a2+b2 этих чисел.
Формат входных данных:
-> На вход программе подаётся два целых числа, каждое на отдельной строке.
Формат выходных данных:
-> Программа должна вывести текст в соответствии с условием. """
a = int(input())
b = int(input())
print('Квадрат суммы', a, 'и', b, 'равен', (a + b) **2)
print('Сумма квадратов', a, 'и', b, 'равна', a**2 + b**2)

# 32. Большое число
""" Как известно, целые числа в языке Python не имеют ограничений, которые встречаются в других языках программирования. 
Напишите программу, которая считывает четыре целых положительных числа a,b,c и d и выводит на экран значение выражения a в степени b + c в степени d.
Формат входных данных:
-> На вход программе подаётся четыре целых положительных числа a,b,c и d , каждое на отдельной строке в указанном порядке.
Формат выходных данных:
-> Программа должна вывести значение ab+cd. """
a = int(input())
b = int(input())
c = int(input())
d = int(input())
print(a ** b + c ** d)

# 33. Размножение n-ок
""" Напишите программу, которая считывает целое положительное число n, n [1;9] и выводит 
значение числа n + nn + nnn.
Формат входных данных:
-> На вход программе подаётся одно целое положительное число n, n∈[1;9].
Формат выходных данных:
-> Программа должна вывести число n+nn+nnn.
Примечание. Для первого теста 1 + 11 + 111 = 123. """
n = int(input())
print(n + 11 * n + 111 * n)

# 34. Пароль
""" При регистрации на сайтах требуется вводить пароль дважды. 
Это сделано для безопасности, поскольку такой подход уменьшает возможность неверного ввода пароля.
Напишите программу, которая сравнивает пароль и его подтверждение. 
Если они совпадают, то программа выводит: «Пароль принят», иначе: «Пароль не принят».
Формат входных данных:
-> На вход программе подаются две строки.
Формат выходных данных:
-> Программа должна вывести одну строку в соответствии с условием задачи. """
pass1 = input()
pass2 = input()
if pass1 == pass2:
    print('Пароль принят')
else:
    print('Пароль не принят')

# 35. Четное или нечетное?
""" Напишите программу, которая определяет, является число четным или нечетным.
Формат входных данных:
-> На вход программе подаётся одно целое число.
Формат выходных данных:
-> Программа должна вывести «Четное», если число четное, и «Нечетное» — если число нечетное. """
num = int(input())
if num % 2 == 0:
    print('Четное')
else:
    print('Нечетное')

# 36. Соотношение 
""" Напишите программу, которая проверяет, что для заданного четырехзначного числа выполняется следующее соотношение: сумма первой и последней цифр равна разности второй и третьей цифр.
Формат входных данных:
-> На вход программе подаётся одно целое положительное четырёхзначное число.
Формат выходных данных:
-> Программа должна вывести «ДА», если соотношение выполняется, и «НЕТ» — если не выполняется. """
num = int(input())
digit_1 = num // 1000
digit_2 = (num % 1000) // 100
digit_3 = (num % 100) // 10
digit_4 = num % 10
if digit_1 + digit_4 == digit_2 - digit_3:
    print('ДА')
else:
    print('НЕТ')

# 37. Роскомнадзор
""" Напишите программу, которая определяет, разрешен ли пользователю доступ к интернет-ресурсу или нет.
Формат входных данных:
-> На вход программе подаётся целое число — возраст пользователя.
Формат выходных данных:
-> Программа должна вывести текст «Доступ разрешен», если возраст не менее 18, и «Доступ запрещен» - в противном случае. """
num = int(input())
if num >= 18:
    print('Доступ разрешен')
else:
    print('Доступ запрещен')

# 38. Арифметическая прогрессия
""" Напишите программу, которая определяет, являются ли три заданных числа (в указанном порядке) 
последовательными членами арифметической прогрессии.
Формат входных данных:
-> На вход программе подаются три числа, каждое на отдельной строке.
Формат выходных данных:
-> Программа должна вывести «YES» или «NO» (без кавычек) в соответствии с условием задачи. """
num1 = int(input())
num2 = int(input())
num3 = int(input())
if num3 - num2 == num2 - num1:
    print('YES')
else:
    print('NO')

# 39. Наименьшее из двух чисел
""" Напишите программу, которая определяет наименьшее из двух чисел.
Формат входных данных:
-> На вход программе подаётся два различных целых числа.
Формат выходных данных:
-> Программа должна вывести наименьшее из двух чисел. """
num1 = int(input())
num2 = int(input())
if num1 < num2:
    print(num1)
else:
    print(num2)

# 40. Наименьшее из четырёх чисел
""" Напишите программу, которая определяет наименьшее из четырёх чисел.
Формат входных данных
На вход программе подаётся четыре целых числа.
Формат выходных данных
Программа должна вывести наименьшее из четырёх чисел.
Примечание. Учитывайте, что минимальные числа могут повторяться. """
num1, num2, num3, num4 = int(input()), int(input()), int(input()), int(input())
minimal = num1
if num1 > num2:
    minimal = num2
if num2 > num3:
    minimal = num3
if num3 > num4:
    minimal = num4
print(minimal)

# 41. Возрастная группа
""" Напишите программу, которая по введённому возрасту пользователя сообщает, к какой возрастной группе он относится:
->	до 13 (включительно) – детство;
->	от 14 до 24 (включительно) – молодость;
->	от 25 до 59 (включительно) – зрелость;
->	от 60 – старость.
Формат входных данных: На вход программе подаётся одно целое число – возраст пользователя.
Формат выходных данных: Программа должна вывести название возрастной группы. """
age = int(input())
if age <= 13:
    print('детство')
if 13 < age <= 24:
    print('молодость')
if 24 < age <= 59:
    print('зрелость')
if age > 59:
    print('старость')

# 42. Только +
""" Напишите программу, которая считывает три числа и подсчитывает сумму только положительных чисел.
Формат входных данных:
-> На вход программе подаются три целых числа.
Формат выходных данных:
-> Программа должна вывести одно число – сумму положительных чисел.
Примечание. Если положительных чисел нет, то следует вывести 0. """
num1, num2, num3 = int(input()), int(input()), int(input())
sum = 0
if num1 > 0:
    sum = sum + num1
if num2 > 0:
    sum = sum + num2
if num3 > 0:
    sum = sum + num3
print(sum)

# 43. Принадлежность-1 
""" Напишите программу, которая принимает целое число x и определяет, принадлежит ли данное число указанному промежутку (от -1 до 17) (не включая эти точки). 
Формат входных данных:
-> На вход программе подаётся целое число x.
Формат выходных данных:
-> Программа должна вывести текст в соответствии с условием задачи. """
x = int(input())
if x > -1 and x < 17:
    print('Принадлежит')
else:
    print('Не принадлежит')

# 44. Принадлежность-2
""" Напишите программу, которая принимает целое число x и определяет, принадлежит ли данное число указанным промежуткам (от -3 и меньше и от +7 и выше) включая начальные точки.
Формат входных данных:
-> На вход программе подаётся целое число x.
Формат выходных данных:
-> Программа должна вывести текст в соответствии с условием задачи. """ 
x = int(input())
if x <= -3 or x >= 7:
    print('Принадлежит')
else:
    print('Не принадлежит')

# 45. Принадлежность-3
""" Напишите программу, которая принимает целое число x и определяет, принадлежит ли данное число указанным промежуткам:
- Первый промежуток: от -2 включительно до -30 не включительно
- Второй промежуток: от 7 не включительно до 25 включительно.
Формат входных данных: На вход программе подаётся целое число x.
Формат выходных данных: Программа должна вывести текст в соответствии с условием задачи. """
x = int(input())
if (x <= -2 and x > -30) or x > 7 and x <= 25:
    print('Принадлежит')
else:
    print('Не принадлежит')

# 46. Красивое число
""" Назовем число красивым, если оно является четырехзначным и делится нацело на 7 или на 17. 
Напишите программу, определяющую, является ли введённое число красивым. 
Программа должна вывести «YES», если число является красивым, или «NO» в противном случае.
- Формат входных данных: На вход программе подаётся натуральное число.
- Формат выходных данных: Программа должна вывести текст в соответствии с условием задачи. """
num = int(input())
if (num / 1000 >= 1 and num / 1000 < 10) and (num % 7 == 0 or num % 17 == 0):
    print('YES')
else:
    print('NO')

# 47. Неравенство треугольника
""" Напишите программу, которая принимает три положительных числа и определяет, существует ли 
невырожденный треугольник с такими сторонами.
Формат входных данных: На вход программе подаётся три положительных целых числа.
Формат выходных данных: Программа должна вывести «YES» или «NO» в соответствии с условием задачи.
Примечание. Треугольник существует, если выполняется неравенство треугольника: 
a + b > c 
a + c > b
b + c > a,
где a,b,c - стороны треугольника.

т.е. длина любой стороны треугольника всегда меньше суммы длин двух его других сторон"""
a = int(input())
b = int(input())
c = int(input())
if a + b > c and a + c > b and b + c > a:
    print('YES')
else:
    print('NO')

# 48. Високосный год
""" Напишите программу, которая определяет, является ли год с данным номером високосным. Если год является високосным, то выведите «YES», иначе выведите «NO».
Год является високосным, если его номер кратен 4, но не кратен 100, или если он кратен 400.
Формат входных данных: На вход программе подаётся натуральное число.
Формат выходных данных: Программа должна вывести текст в соответствии с условием задачи. """
year = int(input())
if year % 4 == 0 and year % 100 != 0 or year % 400 == 0:
    print('YES')
else:
    print('NO')

# 49. Ход ладьи
""" Даны две различные клетки шахматной доски. Напишите программу, которая определяет, 
может ли ладья попасть с первой клетки на вторую одним ходом. 
Программа получает на вход четыре числа от 1 до 8 каждое, задающие номер столбца и номер строки 
сначала для первой клетки, потом для второй клетки. 
Программа должна вывести «YES», если из первой клетки ходом ладьи можно попасть во вторую, или «NO» в противном случае.
-> Формат входных данных: На вход программе подаётся четыре числа от 1 до 8.
-> Формат выходных данных: Программа должна вывести текст в соответствии с условием задачи.
Примечание. Шахматная ладья ходит по горизонтали или вертикали. """

colomn_num1 = int(input())
line_num1 = int(input())
colomn_num2 = int(input())
line_num2 = int(input())
if colomn_num1 == colomn_num2 or line_num1 == line_num2:
    print('YES')
else:
    print('NO')

# 50. Ход короля 🌶
""" Даны две различные клетки шахматной доски. Напишите программу, которая определяет, может ли король 
попасть с первой клетки на вторую одним ходом. 
Программа получает на вход четыре числа от 1 до 8 каждое, задающие номер столбца и номер строки сначала 
для первой клетки, потом для второй клетки. 
Программа должна вывести «YES», если из первой клетки ходом короля можно попасть во вторую, или «NO» в противном случае.
Формат входных данных: На вход программе подаётся четыре числа от 1 до 8.
Формат выходных данных: Программа должна вывести текст в соответствии с условием задачи.
Примечание. Шахматный король ходит по горизонтали, вертикали и диагонали, но только на 1 клетку. """

# 1st version:
colomn_num1 = int(input())
line_num1 = int(input())
colomn_num2 = int(input())
line_num2 = int(input())
diff_line = line_num2 - line_num1
diff_column = colomn_num2 - colomn_num1
if (diff_line == -1 or diff_line == 1 or diff_line == 0) and (diff_column == -1 or diff_column == 1 or diff_column == 0):
    print('YES')
else:
    print('NO')

# 2nd version:
colomn_num1 = int(input())
line_num1 = int(input())
colomn_num2 = int(input())
line_num2 = int(input())
diff_line = line_num2 - line_num1
diff_column = colomn_num2 - colomn_num1
if (-1 <= diff_line <= 1) and (-1 <= diff_column <= 1):
    print('YES')
else:
    print('NO')


# 51. Гонка спидстеров
""" Зум бросил вызов Флэшу и предложил ему честный поединок в виде гонки вокруг магнетара. 
В случае проигрыша эта нейтронная звезда зарядится и уничтожит мир, поэтому Флэш решил не рисковать без 
причины и узнать у своего друга Циско Рамона, есть ли смысл принимать вызов. 
Циско получил данные, что скорость Зума равна n, а скорость Флэша равна k.
Напишите программу, которая должна вывести ответ Циско на вопрос Флэша.
- Формат входных данных: На вход программе подаётся два целых числа n и k – скорости Зума и Флэша.
- Формат выходных данных: Если Зум быстрее Флэша, нужно вывести «NO», а если Флэш быстрее Зума, нужно вывести «YES». В случае же если их скорости равны, нужно вывести "Don't know". """
n = int(input())
k = int(input())
if n > k:
    print('NO')
elif k > n:
    print('YES')
else:
    print("Don't know")

# 52. Вид треугольника
""" Напишите программу, которая принимает три положительных числа и определяет вид треугольника, длины сторон которого равны введенным числам.
Формат входных данных
На вход программе подаются три числа – длины сторон существующего треугольника.
Формат выходных данных
Программа должна вывести на экран текст – вид треугольника («Равносторонний», «Равнобедренный» или «Разносторонний»). """
a = int(input())
b = int(input())
c = int(input())
if a == b and b == c:
    print('Равносторонний')
elif a != b and b != c and a != c:
    print('Разносторонний')
else:
    print('Равнобедренный')


# 53. Среднее число
""" Даны три различных целых числа. Напишите программу, которая находит среднее по величине число.
Формат входных данных: На вход программе подаётся три различных целых числа, каждое на отдельной строке.
Формат выходных данных: Программа должна вывести среднее по величине число.
Примечание. Средним по величине называется число, которое будет вторым, если три числа отсортировать в порядке возрастания. """

# 1-й вариант
num1 = int(input())
num2 = int(input())
num3 = int(input())
if num1 > num2 and num2 > num3 or num1 < num2 and num2 < num3:
    print(num2)
elif num2 > num1 and num1 > num3 or num2 < num1 and num1 < num3:
    print(num1)
elif num2 > num3 and num3 > num1 or num2 < num3 and num3 < num1:
    print(num3)

# 2-й вариант
num1 = int(input())
num2 = int(input())
num3 = int(input())
if num1 > num2 > num3 or num1 < num2 < num3:
    print(num2)
elif num2 > num1 > num3 or num2 < num1 < num3:
    print(num1)
elif num2 > num3 > num1 or num2 < num3 < num1:
    print(num3)

# 54. Количество дней
""" Дан порядковый номер месяца (1,2,…, 12). 
Напишите программу, которая выводит на экран количество дней в этом месяце. Принять, что год является невисокосным.
Примечание. Постарайтесь написать программу так, чтобы в ней было не более трех условий.
Формат входных данных: На вход программе подаётся одно целое число – порядковый номер месяца.
Формат выходных данных: Программа должна вывести количество дней в этом месяце. """
num = int(input())
if num == 4 or num == 6 or num == 9 or num == 11:
    print(30)
elif num == 2:
    print(28)
else:
    print(31)

# 55. Церемония взвешивания
""" Известен вес боксера-любителя (целое число). Известно, что вес таков, что боксер может быть отнесён к одной из трех весовых категорий:
1.	Легкий вес – до 60 кг (невключительно);
2.	Первый полусредний вес – до 64 кг (невключительно);
3.	Полусредний вес – до 69 кг (невключительно).
Напишите программу, определяющую, в какой категории будет выступать данный боксер.
Формат входных данных: На вход программе подаётся одно целое число.
Формат выходных данных: Программа должна вывести текст – название весовой категории. """
weight = int(input())
if num < 60:
    print('Легкий вес')
elif num < 64:
    print('Первый полусредний вес')
else:
    print('Полусредний вес')

# 56. Самописный калькулятор 🌶
""" Напишите программу, которая считывает с клавиатуры два целых числа и строку. 
Если эта строка является обозначением одной из четырёх математических операций (+, -, *, /), то 
выведите результат применения этой операции к введённым ранее числам, 
в противном случае выведите «Неверная операция» (без кавычек). 
Если пользователь захочет поделить на ноль, выведите текст «На ноль делить нельзя!» (без кавычек).
Формат входных данных: На вход программе подаются два целых числа и строка, всё на отдельной строке.
Формат выходных данных: Программа должна вывести результат применения операции к введенным числам или соответствующий текст, если операция неверная либо если происходит деление на ноль. """
num1 = int(input())
num2 = int(input())
operation = input()
if operation == '*':
    print(num1 * num2)
elif operation == '-':
    print(num1 - num2)
elif operation == '+':
    print(num1 + num2)
elif operation == '/':
    if num2 != 0:
        print(num1 / num2)
    else:
        print('На ноль делить нельзя!')
else:
    print('Неверная операция')

# 57. Цветовой микшер 🌶
""" Красный, синий и желтый называются основными цветами, потому что их нельзя получить путем смешения других цветов. 
При смешивании двух основных цветов получается вторичный цвет:
->	если смешать красный и синий, то получится фиолетовый;
->	если смешать красный и желтый, то получится оранжевый;
->	если смешать синий и желтый, то получится зеленый.
Напишите программу, которая считывает названия двух основных цветов для смешивания. 
Если пользователь вводит что-нибудь помимо названий «красный», «синий» или «желтый», то программа должна вывести сообщение об ошибке. 
В противном случае программа должна вывести название вторичного цвета, который получится в результате.
Формат входных данных: 
-> На вход программе подаются две строки, каждая на отдельной строке.
Формат выходных данных:
-> Программа должна вывести полученный цвет смешения либо сообщение «ошибка цвета», если введён был не цвет.
Примечание 1. Если смешать красный и красный, то получится красный и т.д. """

color_1 = input()
color_2 = input()

if color_1 == 'красный' and color_2 == 'синий' or color_2 == 'красный' and color_1 == 'синий':
    print('фиолетовый')
elif color_1 == 'красный' and color_2 == 'желтый' or color_2 == 'красный' and color_1 == 'желтый':
    print('оранжевый')
elif color_1 == 'синий' and color_2 == 'желтый' or color_2 == 'синий' and color_1 == 'желтый':
    print('зеленый')
elif color_1 == color_2 and (color_1 == 'красный' or color_1 == 'синий' or color_1 == 'желтый'):
    print(color_1)
else:
    print('ошибка цвета')

# 58. Цвета колеса рулетки 🌶
""" На колесе рулетки карманы пронумерованы от 0 до 36. Ниже приведены цвета карманов: 
•	карман 0 зеленый;
•	для карманов с 1 по 10 карманы с нечетным номером имеют красный цвет, карманы с четным номером – черный;
•	для карманов с 11 по 18 карманы с нечетным номером имеют черный цвет, карманы с четным номером – красный;
•	для карманов с 19 по 28 карманы с нечетным номером имеют красный цвет, карманы с четным номером – черный;
•	для карманов с 29 по 36 карманы с нечетным номером имеют черный цвет, карманы с четным номером – красный.
Напишите программу, которая считывает номер кармана и показывает, является ли этот карман зеленым, красным или черным. 
Программа должна вывести сообщение об ошибке, если пользователь вводит число, которое лежит вне диапазона от 0 до 36.
Формат входных данных: 
-> На вход программе подаётся одно целое число.
Формат выходных данных: 
-> Программа должна вывести цвет кармана либо сообщение «ошибка ввода», если введённое число лежит вне диапазона от 0 до 36. """

pocket_num = int(input())
if pocket_num == 0:
    print('зеленый')
elif 1 <= pocket_num <= 10:
    if pocket_num % 2 == 0:
        print('черный')
    else:
        print('красный')
elif 11 <= pocket_num <= 18:
    if pocket_num % 2 == 0:
        print('красный')
    else:
        print('черный')
elif 19 <= pocket_num <= 28:
    if pocket_num % 2 == 0:
        print('черный')
    else:
        print('красный')
elif 29 <= pocket_num <= 36:
    if pocket_num % 2 == 0:
        print('красный')
    else:
        print('черный')
elif pocket_num < 0 or pocket_num > 36:
    print('ошибка ввода')


# 59. Пересечение отрезков 
""" На числовой прямой даны два отрезка: [a1; b1] и [a2; b2]. 
Напишите программу, которая находит их пересечение.
Пересечением двух отрезков может быть:
- отрезок;
- точка;
- пустое множество.
Формат входных данных:
На вход программе подаются 4 целых числа a1, b1, a2, b2, каждое на отдельной строке. Гарантируется, что a1< b1 и a2 < b2.
Формат выходных данных:
Программа должна вывести на экран границы отрезка, являющегося пересечением, либо общую точку, либо текст «пустое множество». """

a1 = int(input())
b1 = int(input())
a2 = int(input())
b2 = int(input())

if a1 < a2:
    if a2 > b1:
        print('пустое множество')
    elif a2 == b1:
        print(a2)
    elif a2 < b1 and b2 >= b1:
        print(a2, b1)
    elif a2 < b1 and b2 < b1:
        print(a2, b2)
elif a2 < a1:
    if b2 < a1:
        print('пустое множество')
    elif b2 == a1:
        print(a1)
    elif b2 > a1 and b2 <= b1:
        print(a1, b2)
    elif a1 < b2 and b1 < b2:
        print(a1, b1)
elif a1 == a2:
    if b1 <= b2:
        print(a1, b1)
    elif b2 < b1:
        print(a2, b2)

# 60. Начало столетия
""" Напишите программу, которая определяет, оканчивается ли год с данным номером на два нуля. 
Если год оканчивается, то выведите «YES», иначе выведите «NO».
Формат входных данных
На вход программе подаётся натуральное число.
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи. """
year = int(input())
if year % 100 == 0:
    print('YES')
else:
    print('NO')

# 61. Шахматная доска
""" Заданы две клетки шахматной доски. Напишите программу, которая определяет, имеют ли указанные клетки один цвет или нет. 
Если они покрашены в один цвет, то выведите слово «YES», а если в разные цвета, то «NO».
Формат входных данных
На вход программе подаётся четыре числа от 1 до 8 каждое, задающие номер столбца и номер строки сначала для первой клетки, потом для второй клетки.
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи. """
x1, y1, x2, y2 = int(input()), int(input()), int(input()), int(input())
if (x1 + y1) % 2 == 0 and (x2 + y2) % 2 == 0 or (x1 + y1) % 2 != 0 and (x2 + y2) % 2 != 0:
    print('YES')
else:
    print('NO')

# 62. Girls only
""" Футбольная команда набирает девочек от 10 до 15 лет включительно. 
Напишите программу, которая запрашивает возраст и пол претендента, используя обозначение пола 
буквы m (от male – мужчина) и f (от female – женщина) и определяет подходит ли претендент для вступления в команду или нет. 
Если претендент подходит, то выведите «YES», иначе выведите «NO».
Формат входных данных: на вход программе подаётся натуральное число – возраст претендента и буква обозначающая пол m (мужчина) или f (женщина).
Формат выходных данных: программа должна вывести текст в соответствии с условием задачи. """
age = int(input())
sex = input()
if 10 <= age <= 15 and sex == 'f':
    print('YES')
else:
    print('NO')

# 63. Римские цифры
""" Напишите программу, которая считывает целое число и выводит соответствующую ему римскую цифру. 
Если число находится вне диапазона 1−10, то программа должна вывести текст «ошибка».
Формат входных данных: На вход программе подаётся целое число.
Формат выходных данных: Программа должна вывести текст в соответствии с условием задачи. """
num = int(input())
if num == 1:
    print('I')
elif num == 2:
    print('II')
elif num == 3:
    print('III')
elif num == 4:
    print('IV')   
elif num == 5:
    print('V')    
elif num == 6:
    print('VI')    
elif num == 7:
    print('VII')
elif num == 8:
    print('VIII')   
elif num == 9:
    print('IX')    
elif num == 10:
    print('X')
else:
    print('ошибка')

# 63. YES or NO вот в чем вопрос
""" Напишите программу, которая принимает на вход число и в зависимости от условий выводит текст «YES», либо «NO».
Условия:
- если число нечётное, то вывести «YES»;
- если число чётное в диапазоне от 2 до 5 (включительно), то вывести «NO»;
- если число чётное в диапазоне от 6 до 20 (включительно), то вывести «YES»;
- если число чётное и больше 20, то вывести «NO».
Формат входных данных: На вход программе подаётся натуральное число.
Формат выходных данных: Программа должна вывести текст в соответствии с условием задачи. """
num = int(input())
if num % 2 != 0:
    print('YES')
elif num % 2 == 0:
    if num >= 2 and num <= 5:
        print('NO')
    elif num >= 6 and num <= 20:
        print('YES')
    elif num > 20:
        print('NO')

# 65. Ход слона
""" Даны две различные клетки шахматной доски. 
Напишите программу, которая определяет, может ли слон попасть с первой клетки на вторую одним ходом. 
Программа получает на вход четыре числа от 1 до 8 каждое, задающие номер столбца и номер строки сначала для
первой клетки, потом для второй клетки. 
Программа должна вывести «YES», если из первой клетки ходом слона можно попасть во вторую или «NO» в противном случае.
Формат входных данных: На вход программе подаётся четыре числа от 1 до 8.
Формат выходных данных: Программа должна вывести текст в соответствии с условием задачи.
Примечание. Шахматный слон ходит по диагоналям. """
x1, y1, x2, y2 = int(input()), int(input()), int(input()), int(input())
if (x2 - x1 == y2 - y1):
    print('YES')
elif (x2 - x1 == y1 - y2):
    print('YES')
elif (x1 - x2 == y1 - y2):
    print('YES')
elif (x1 - x2 == y2 - y1):
    print('YES')
else:
    print('NO')

# 66. Ход коня
""" Даны две различные клетки шахматной доски. 
Напишите программу,  которая определяет, может ли конь попасть с первой клетки на вторую одним ходом. 
Программа получает на вход четыре числа от 1 до 8 каждое, задающие номер столбца и номер строки сначала для 
первой клетки, потом для второй клетки. 
Программа должна вывести «YES», если из первой клетки ходом коня можно попасть во вторую или «NO» в противном случае.
Формат входных данных: На вход программе подаётся четыре числа от 1 до 8.
Формат выходных данных: Программа должна вывести текст в соответствии с условием задачи.
Примечание. Шахматный конь ходит буквой «Г». """

x1, y1, x2, y2 = int(input()), int(input()), int(input()), int(input())
if (x2 - x1 == 2 and y2 - y1 == 1) or (x2 - x1 == 1 and y2 - y1 == 2):
    print('YES')
elif (x2 - x1 == 2 and y2 - y1 == -1) or (x2 - x1 == 1 and y2 - y1 == -2):
    print('YES')
elif (x2 - x1 == -2 and y2 - y1 == 1) or (x2 - x1 == -1 and y2 - y1 == 2):
    print('YES')
elif (x2 - x1 == -2 and y2 - y1 == -1) or (x2 - x1 == -1 and y2 - y1 == -2):
    print('YES')
else:
    print('NO')

# 67. Ход ферзя
""" Даны две различные клетки шахматной доски. 
Напишите программу,  которая определяет, может ли ферзь попасть с первой клетки на вторую одним ходом. 
Программа получает на вход четыре числа от 1 до 8 каждое, задающие номер столбца и номер строки сначала для 
первой клетки, потом для второй клетки. 
Программа должна вывести «YES», если из первой клетки ходом ферзя можно попасть во вторую или «NO» в противном случае.
Формат входных данных: На вход программе подаётся четыре числа от 1 до 8.
Формат выходных данных: Программа должна вывести текст в соответствии с условием задачи.
Примечание. Шахматный ферзь ходит по диагонали, горизонтали или вертикали. """

x1, y1, x2, y2 = int(input()), int(input()), int(input()), int(input())
if (x2 - x1 == y2 - y1):
    print('YES')
elif (x2 - x1 == y1 - y2):
    print('YES')
elif (x1 - x2 == y1 - y2):
    print('YES')
elif (x1 - x2 == y2 - y1):
    print('YES')

elif (x2 > x1 or x2 < x1) and y2 == y1:
    print('YES')
elif (y2 > y1 or y2 < y1) and x2 == x1:
    print('YES')
else:
    print('NO')

# 68. Площадь треугольника
""" Напишите программу, которая считывает длины двух катетов в прямоугольном треугольнике и выводит его площадь по формуле: S = 1/2 * a * b
Формат входных данных: 
- На вход программе подаётся два числа с плавающей точкой – длины катетов, каждое на отдельной строке.
Формат выходных данных: 
- Программа должна вывести одно число – площадь треугольника. """
a = float(input())
b = float(input())
print(1/2 * a * b)

# 69. Две старушки
""" Две старушки идут навстречу друг другу с постоянными скоростями V1 и V2 км/ч. 
Определите, через какое время (в часах) старушки встретятся, если расстояние между ними равно S км.
Формат входных данных:
На вход программе подаются три числа с плавающей точкой S, V1, V2, каждое на отдельной строке.
Формат выходных данных: 
Программа должна вывести одно число в соответствии с условием задачи.
Примечание. Это очень быстрые старушки. """
S = float(input())
V1 = float(input())
V2 = float(input())
print(S / (V1 + V2))

#70. Обратное число
""" Напишите программу, которая считывает с клавиатуры одно число и выводит обратное ему. 
Если при этом введённое с клавиатуры число – ноль, то вывести «Обратного числа не существует» (без кавычек). 
Формат входных данных:
На вход программе подается одно действительное число.
Формат выходных данных:
Программа должна вывести действительное число обратное данному, либо текст в соответствии с условием задачи. """
num = float(input())
if num != 0:
    print(1/num)
else:
    print('Обратного числа не существует')

# 71. 451 градус по Фаренгейту 
""" У известного американского писателя Рэя Бредбери есть роман «451 градус по Фаренгейту». 
Напишите программу, которая определяет, какой температуре по шкале Цельсия соответствует указанное значение по шкале Фаренгейта.
Используйте формулу для перевода: C = 5/9(F− 32).
Формат входных данных: На вход программе подаётся вещественное число градусов по шкале Фаренгейта.
Формат выходных данных: Программа должна вывести число градусов по шкале Цельсия. """
temp_F = float(input())
print(5/9 * (temp_F - 32))

# 72. Dog age
""" На вход программе подается число n – количество собачьих лет. 
Напишите программу, которая вычисляет возраст собаки в человеческих годах по следующему алгоритму: 
в течение первых двух лет собачий год равен 10.5 человеческим годам, после этого каждый год собаки равен 4 человеческим годам.
Формат входных данных: На вход программе подаётся натуральное число – количество собачьих лет.
Формат выходных данных: Программа должна вывести возраст собаки в человеческих годах. """
dog_age = int(input())
if dog_age <= 2:
    print(dog_age * 10.5)
else:
    print(2 * 10.5 + (dog_age - 2) * 4)

# 73. Первая цифра после точки
""" Дано положительное действительное число. Выведите его первую цифру после десятичной точки.
Формат входных данных: На вход программе подается положительное действительное число.
Формат выходных данных: Программа должна вывести цифру в соответствии с условием задачи. """
num = float(input())
num_int = int(num)
num_diff = num - num_int
print(int(num_diff * 10))

# 74. Дробная часть
""" Дано положительное действительное число. Выведите его дробную часть.
Формат входных данных:
На вход программе подается положительное действительное число.
Формат выходных данных:
Программа должна вывести дробную часть числа в соответствии с условием задачи. """
num = float(input())
print(num - int(num))

# 75. Наибольшее и наименьшее
""" Напишите программу, которая находит наименьшее и наибольшее из пяти чисел.
Формат входных данных:
На вход программе подается пять целых чисел, каждое на отдельной строке.
Формат выходных данных:
Программа должна вывести наименьшее и наибольшее число с поясняющей надписью. """
num1 = int(input())
num2 = int(input())
num3 = int(input())
num4 = int(input())
num5 = int(input())
print('Наименьшее число =', min(num1, num2, num3, num4, num5))
print('Наибольшее число =', max(num1, num2, num3, num4, num5))

# 76. Сортировка трёх
""" Напишите программу, которая упорядочивает три числа от большего к меньшему.
Формат входных данных:
На вход программе подается три целых числа, каждое на отдельной строке.
Формат выходных данных:
Программа должна вывести три числа, каждое на отдельной строке, упорядоченных от большего к меньшему. """
num1 = int(input())
num2 = int(input())
num3 = int(input())
sum_123 = num1 + num2 + num3
max_num = max(num1, num2, num3)
min_num = min(num1, num2, num3)

print(max_num)
print(sum_123 - (max_num + min_num))
print(min_num)

# 77. Интересное число
""" Назовем число интересным, если в нем разность максимальной и минимальной цифры равняется средней по величине цифре. 
Напишите программу, которая определяет, интересное число или нет. 
Если число интересное, следует вывести «Число интересное», иначе - «Число неинтересное».
Формат входных данных: На вход программе подается целое трехзначное число.
Формат выходных данных: Программа должна вывести текст в соответствии с условием задачи. """

n = int(input())
digit_1 = n // 100
digit_2 = (n // 10) % 10
digit_3 = n % 10
sum_digit = digit_1 + digit_2 + digit_3
max_digit = max(digit_1, digit_2, digit_3)
min_digit = min(digit_1, digit_2, digit_3)
mid_digit = sum_digit - (max_digit + min_digit)

if max_digit - min_digit == mid_digit:
    print('Число интересное')
else:
    print('Число неинтересное')

# 78. Абсолютная сумма
""" Даны пять чисел a1,a2,a3,a4,a5. Напишите программу, которая вычисляет сумму их модулей: 
|a1| + |a2| + |a3| + |a4| + |a5|.
Формат входных данных:
На вход программе подается пять действительных чисел a1,a2,a3,a4,a5, каждое на отдельной строке.
Формат выходных данных:
Программа должна вывести одно число – сумму модулей введённых чисел. """
a1 = float(input())
a2 = float(input())
a3 = float(input())
a4 = float(input())
a5 = float(input())
print(abs(a1) + abs(a2) + abs(a3) + abs(a4) + abs(a5))

# 79. Манхэттенское расстояние
""" Прогуливаясь по Манхэттену, вы не можете попасть из точки А в точку Б по кратчайшему пути. 
Если только вы не умеете проходить сквозь стены, вам обязательно придется идти вдоль его параллельно-перпендикулярных улиц.
На плоскости манхэттенское расстояние между двумя точками (p1; p2) и (q1; q2) определяется так: 
|p1−q1| + |p2−q2|.
Напишите программу определяющую манхэттенское расстояние между двумя точками, координаты которых заданы. 
Формат входных данных:
На вход программе подается четыре целых числа, каждое на отдельной строке – p1,p2,q1,q2.
Формат выходных данных:
Программа должна вывести одно число – манхэттенское расстояние. """
p1 = int(input())
p2 = int(input())
q1 = int(input())
q2 = int(input())
print(abs(p1 - q1) + abs(p2 - q2))

# 80. Напишите программу, которая выводит текст:
""" --> "Python is a great language!", said Fred. "I don't ever remember having this much fun before."
Примечание. Используйте конкатенацию строк. """
print('"Python is a great language!", said Fred. ' + '"I don' + "'" + 't ever remember having this much fun before."')

# 81. What's Your Name?
""" Напишите программу, которая считывает с клавиатуры две строки – имя и фамилию пользователя и выводит фразу:
«Hello [введенное имя] [введенная фамилия]! You have just delved into Python».
Формат входных данных: На вход программе подаётся две строки (имя и фамилия), каждая на отдельной строке.
Формат выходных данных: Программа должна вывести текст в соответствии с условием задачи.
Примечание. Между firstname lastname вставьте пробел =) """ 
firstname = input()
lastname = input()
print('Hello ' + firstname + ' ' + lastname + '! You have just delved into Python')

# 82. Футбольная команда
""" Напишите программу, которая считывает с клавиатуры название футбольной команды и выводит фразу:
«Футбольная команда [введённая строка] имеет длину [длина введённой строки] символов».
Формат входных данных: На вход программе подаётся строка – название футбольной команды.
Формат выходных данных: Программа должна вывести текст в соответствии с условием задачи. """
f_team = input()
print('Футбольная команда ' + f_team + ' имеет длину ' + str(len(f_team)) + ' символов')

# 83. Три города
""" Даны названия трех городов. Напишите программу, которая определяет самое короткое и самое длинное название города.
Формат входных данных:
На вход программе подаётся названия трех городов, каждое на отдельной строке.
Формат выходных данных:
Программа должна вывести самое короткое и длинное название города, каждое на отдельной строке.
Примечание. Гарантируется, что длины названий всех трех городов различны. """
city1 = input()
city2 = input()
city3 = input()

if len(city3) > len(city1) < len(city2):
    print(city1)
elif len(city1) > len(city2) < len(city3):
    print(city2)
elif len(city1) > len(city3) < len(city2):
    print(city3)

if len(city3) < len(city1) > len(city2):
    print(city1)
elif len(city1) < len(city2) > len(city3):
    print(city2)
elif len(city1) < len(city3) > len(city2):
    print(city3)

# 84. Арифметические строки
""" Вводятся 3 строки в случайном порядке. 
Напишите программу, которая выясняет, можно ли из длин этих строк построить арифметическую прогрессию.
Формат входных данных:
На вход программе подаются три строки, каждая на отдельной строке.
Формат выходных данных:
Программа должна вывести строку «YES», если из длин введенных слов можно построить арифметическую прогрессию, 
или «NO» - в противном случае. """
str1 = input()
str2 = input()
str3 = input()

num1, num2, num3 = len(str1), len(str2), len(str3)
max_num = max(num1, num2, num3)
min_num = min(num1, num2, num3)
mid_num = (num1 + num2 + num3) - (max_num + min_num)

if max_num - mid_num == mid_num - min_num:
    print('YES')
else:
    print('NO')

# 85. Цвет настроения синий
""" Напишите программу, которая считывает одну строку, после чего выводит «YES», если во введенной строке 
есть подстрока «синий» и «NO» - в противном случае.
Формат входных данных:
На вход программе подается одна строка.
Формат выходных данных:
Программа должна вывести текст в соответствии с условием задачи. """
str1 = input()
if 'синий' in str:
    print('YES')
else:
    print('NO')

# 86. Отдыхаем ли?
""" Напишите программу, которая считывает одну строку, после чего выводит «YES», если в введённой строке есть 
подстрока «суббота» или «воскресенье», и «NO» в противном случае.
Формат входных данных:
На вход программе подается одна строка.
Формат выходных данных:
Программа должна вывести текст в соответствии с условием задачи. """
str1 = input()

if 'суббота' in str1 or 'воскресенье' in str1:
    print('YES')
else:
    print('NO')

# 87. Корректный email
""" Будем считать email адрес корректным, если в нем есть символ собачки (@) и точки (.). 
Напишите программу, проверяющую корректность email адреса.
Формат входных данных
На вход программе подаётся одна строка – email адрес.
Формат выходных данных
Программа должна вывести строку «YES», если email адрес является корректным и «NO» в ином случае.
Примечание. Для настоящих email адресов недостаточно наличия символов @ и ., однако их отсутствие гарантировано влечет за собой неверный email. """
email_str = input()
if '.' in email_str and '@' in email_str:
    print('YES')
else:
    print('NO')

# 88. Евклидово расстояние
""" На плоскости евклидово расстояние между двумя точками (x1;y1) и (x2;y2) определяется так 
ρ=√ (x1−x2)2+(y1−y2)2.
Напишите программу определяющую евклидово расстояние между двумя точками, координаты которых заданы.
Формат входных данных:
На вход программе подается четыре вещественных числа, каждое на отдельной строке – x1,y1,x2,y2.
Формат выходных данных:
Программа должна вывести одно число – евклидово расстояние. """

from math import *
x1 = float(input())
y1 = float(input())
x2 = float(input())
y2 = float(input())
print(sqrt((x1 - x2)**2 + (y1 - y2)**2))

# 89. Площадь и длина
""" Напишите программу определяющую площадь круга и длину окружности по заданному радиусу R.
Формат входных данных:
На вход программе подается одно вещественное число R.
Формат выходных данных:
Программа должна вывести два числа – площадь круга и длину окружности радиуса R. """
from math import *
R = float(input())
print(pi * pow(R, 2))
print(2 * pi * R)

# 90. Средние значения
""" В математике выделяют следующие средние значения:
среднее арифметическое чисел a и b: a + b / 2
среднее геометрическое чисел a и b: корень квадратный из (a * b)
среднее гармоническое чисел a и b: 2ab / a + b
среднее квадратичное чисел a и b: корень квадратный из ((a2 + b2) / 2)   # корень из (a**2 + b**2) / 2

Формат входных данных:
На вход программе подается два вещественных числа a и b, каждое на отдельной строке.
Формат выходных данных:
Программа должна вывести 4 числа – среднее арифметическое, геометрическое, гармоническое и квадратичное. """

from math import *
a = float(input())
b = float(input())
print((a + b)/2)
print((a * b)**0.5)
print(2 * a * b/(a + b))
print(sqrt((a**2 + b**2) / 2))

# 91. Тригонометрическое выражение
""" Напишите программу, вычисляющую значение тригонометрического выражения sin x + cos x + tan2 x
по заданному числу градусов x.
Формат входных данных:
На вход программе подается одно вещественное число x измеряемое в градусах. 
Формат выходных данных:
Программа должна вывести одно число – значение тригонометрического выражения.
Примечание 1. Тригонометрические функции принимают аргумент в радианах.
Модуль math содержит встроенную функцию radians(), которая переводит угол из градусов в угол в радианах. """
from math import *
x = float(input())
x_rad = radians(x)
print(sin(x_rad) + cos(x_rad) + (tan(x_rad))**2)

# 92. Пол и потолок
""" Напишите программу, вычисляющую значение ⌈x⌉ +⌊x⌋ по заданному вещественному числу x.
Формат входных данных
На вход программе подается одно вещественное число x.
Формат выходных данных
Программа должна вывести одно число – значение указанного выражения.
Примечание. ⌈x⌉ – потолок числа, ⌊x⌋ – пол числа. """
from math import *
x = float(input())
print(floor(x) + ceil(x))

# 93. Квадратное уравнение 🌶️🌶️
""" Даны три вещественных числа a, b, c. 
Напишите программу, которая находит вещественные корни квадратного уравнения: ax2+bx+c=0.
Если уравнение имеет два корня, то следует вывести их в порядке возрастания.
Формат входных данных:
На вход программе подается три вещественных числа a≠0, b, c, каждое на отдельной строке.
Формат выходных данных:
Программа должна вывести вещественные корни уравнения каждый на отдельной строке, если они существуют, 
или текст «Нет корней» в противном случае. """
from math import *
a = float(input())
b = float(input())
c = float(input())
discrim = b**2 - (4 * a * c)

if discrim > 0:
    x1 = (-b - sqrt(discrim)) / (2 * a)
    x2 = (-b + sqrt(discrim)) / (2 * a)
    print(min(x1, x2))
    print(max(x1, x2))
elif discrim == 0:
    print(-b / (2 * a))
else:
    print('Нет корней')

# 94. Правильный многоугольник
""" Правильный многоугольник — выпуклый многоугольник, у которого равны все стороны и все углы между смежными сторонами. 
Площадь правильного многоугольника с длиной стороны a и количеством сторон n вычисляется по формуле: 
S = n*a2 / 4tg(π/n)

Даны два числа: натуральное число n и вещественное число a. 
Напишите программу, которая находит площадь указанного правильного многоугольника.
Формат входных данных:
На вход программе подается два числа n и a, каждое на отдельной строке.
Формат выходных данных:
Программа должна вывести вещественное число – площадь многоугольника. """
from math import *
n = int(input())
a = float(input())
result = (n * a**2) / (4 * tan(pi / n))
print(result)



"""             ============== ЦИКЛЫ ==============                  """

# 95. Python is awesome
""" Напишите программу, которая выводит слова «Python is awesome!» (без кавычек) 10 раз.
Формат входных данных
Формат выходных данных
Программа должна вывести 10 раз текст «Python is awesome!», каждый на отдельной строке. """
for i in range(10):
    print('Python is awesome!')

# 96. Повторяй за мной 1
Дано предложение и количество раз которое его надо повторить. 
Напишите программу, которая повторяет данное предложение нужное количество раз.
Формат входных данных:
В первой строке записано текстовое предложение, во второй — количество повторений.
Формат выходных данных:
Программа должна вывести указанное текстовое предложение нужное количество раз. Каждое повторение должно начинаться с новой строки.
str1 = input()
num = int(input())
for i in range(num):
    print(str1)

# 97. Последовательность символов
""" Напишите программу, которая использует ровно три цикла for для печати следующей последовательности символов: """

for i in range(6):
    print('AAA')
for i in range(5):
    print('BBBB')
print('E')
for i in range(9):
    print('TTTTT')
print('G')

# 98. Звездный прямоугольник
""" На вход программе подается натуральное число n.
Напишите программу, которая печатает звездный прямоугольник размерами n×19.
Формат входных данных:
На вход программе подаётся натуральное число n[1;20] — высота звездного прямоугольника.
Формат выходных данных:
Программа должна вывести звездный прямоугольник размерами n×19.
Подсказка. Для печати звездной линии используйте умножение строки на число. """
n = int(input())
for i in range(n):
    print('*' * 19)

# 99. Повторяй за мной 2
""" Напишите программу, которая считывает одну строку текста и выводит 10 строк, пронумерованных от 0 до 9, каждая с указанной строкой текста.
Формат входных данных: На вход программе подается одна строка текста.
Формат выходных данных: Программа должна вывести десять строк в соответствии с условием задачи. """
text = input()
for i in range(10):
    print(i, text)

# 100. Квадрат числа
""" На вход программе подается натуральное число n. 
Напишите программу, которая для каждого из чисел от 0 до n (включительно) выводит фразу: «Квадрат числа [число] равен [число]» (без кавычек).
Формат входных данных: На вход программе подается натуральное число n.
Формат выходных данных: Программа должна вывести текст в соответствии с условием задачи. """
n = int(input())
for i in range(n + 1):
    print('Квадрат числа', i, 'равен', i ** 2)

# 101. Звездный треугольник
""" На вход программе подается натуральное число n (n≥2)  – катет прямоугольного равнобедренного треугольника.
Напишите программу, которая выводит звездный треугольник в соответствии с примером.
Формат входных данных
На вход программе подается одно натуральное число n (n≥2.
Формат выходных данных
Программа должна вывести треугольник в соответствии с условием задачи. """
n = int(input())
for i in range(n):
    print("*" * (n - i))

# 102. Популяция
""" На вход программе подается три натуральных числа m,p,n:
- m: стартовое количество организмов;
- p: среднесуточное увеличение в %;
- n: количество дней для размножения.
Напишите программу, которая предсказывает размер популяции организмов. 
Программа должна выводить размер популяции в каждый день, начиная с 11 и заканчивая n-м днем. 
Формат входных данных: На вход программе подается три натуральных числа.
Формат выходных данных: Программа должна вывести текст в соответствии с условием задачи. """

m = int(input())  #  стартовое количество организмов;
p = int(input())  #  среднесуточное увеличение в %;
n = int(input())  # количество дней для размножения.
for i in range(n):
    print(i + 1, m)
    m = m + m * p/100

# 103. Последовательность чисел 1
""" Даны два целых числа m и n ( m≤n). 
Напишите программу, которая выводит все целые числа от m до n включительно.
Формат входных данных
На вход программе подаются два целых числа m и n, каждое на отдельной строке.
Формат выходных данных
Программа должна вывести числа в соответствии с условием задачи. """
m = int(input())
n = int(input())
for i in range(m, n + 1):
    print(i)

# 104. Последовательность чисел 2
""" Даны два целых числа m и n. 
Напишите программу, которая выводит все целые числа от m до n включительно в порядке возрастания, если m<n, 
или в порядке убывания в противном случае.
Формат входных данных:
На вход программе подаются два целых числа m и n, каждое на отдельной строке.
Формат выходных данных:
Программа должна вывести числа в соответствии с условием задачи. """
m = int(input())
n = int(input())
if m <= n:
    for i in range(m, n + 1):
        print(i)
elif m > n:
    for i in range(m, n - 1, -1):
        print(i)

# 105. Последовательность чисел 3
""" Даны два целых числа m и n (m>n). Напишите программу, которая выводит все нечетные целые числа от m до n включительно в порядке убывания.
Формат входных данных:
На вход программе подаются два целых числа m и n, каждое на отдельной строке.
Формат выходных данных:
Программа должна вывести числа в соответствии с условием задачи.
Примечание. Попробуйте решить задачу двумя способами: с использованием условного оператора if и без него. """

# 1-й способ:
m = int(input())
n = int(input())
for i in range(m, n - 1, -1):
    if i % 2 != 0:
        print(i)

# 2-й способ:
m = int(input())
n = int(input())
for i in range(m + (m % 2) - 1, n - 1, -2):
    print(i)

# 106. Последовательность чисел 4
""" Даны два натуральных числа m и n ( m≤n). 
Напишите программу, которая выводит все целые числа от m до n включительно, удовлетворяющие хотя бы одному из условий:
- число кратно 17;
- число оканчивается на 9;
- число кратно 3 и 5 одновременно.
Формат входных данных:
На вход программе подаются два натуральных числа m и n (m≤n), каждое на отдельной строке.
Формат выходных данных:
Программа должна вывести числа в соответствии с условием задачи.
Примечание. Если нет чисел, удовлетворяющих условию, выводить ничего не надо. """
m = int(input())
n = int(input())
for i in range(m, n + 1):
    if i % 17 == 0 or i % 10 == 9 or i % 3 == 0 and i % 5 == 0:
        print(i)

# 107. Таблица умножения
""" Дано натуральное число n. Напишите программу, которая выводит таблицу умножения на n (от 1 до 10 включительно).
Формат входных данных:
На вход программе подается натуральное число.
Формат выходных данных:
Программа должна вывести таблицу умножения на введенное число.
Примечание. В качестве знака умножения используйте английскую букву x. """
n = int(input())
for i in range(1, 11):
    print(n, 'x', i, '=', n * i)

# 108. Количество чисел
""" На вход программе подаются два целых числа a и b (a≤b). 
Напишите программу, которая подсчитывает количество чисел в диапазоне от a до b (включительно), куб которых оканчивается на 4 или 9.
Формат входных данных:
На вход программе подаются два целых числа a и b (a≤b).
Формат выходных данных:
Программа должна вывести одно целое число в соответствии с условием программы. """
a = int(input())
b = int(input())
counter = 0
for i in range(a, b + 1):
    if i**3 % 10 == 4 or i**3 % 10 == 9:
        counter += 1
print(counter)

# 109. Сумма чисел
""" На вход программе подается натуральное число n, а затем n целых чисел, каждое на отдельной строке. 
Напишите программу, которая подсчитывает сумму введенных чисел (не включая само число n). 
Формат входных данных:
На вход программе подаются натуральное число n, а затем n целых чисел, каждое на отдельной строке.
Формат выходных данных:
Программа должна вывести сумму данных чисел. """
n = int(input())
total = 0
for i in range(n):
    num = int(input())
    total += num
print(total)

# 110. Сумма чисел 2
""" На вход программе подается натуральное число n. 
Напишите программу, которая подсчитывает сумму тех чисел от 1 до n (включительно), квадрат которых оканчивается на 2, 5 или 8.
Формат входных данных:
На вход программе подается натуральное число n.
Формат выходных данных:
Программа должна вывести единственное число в соответствии с условием задачи. 
Примечание. Если таких чисел нет в указанном диапазоне, то следует вывести 0. """
n = int(input())
total = 0
for i in range(1, n + 1):
    if i**2 % 10 == 2 or i**2 % 10 == 5 or i**2 % 10 == 8:
        total += i
print(total)

# 111. Факториал
""" На вход программе подается натуральное число n. Напишите программу, которая вычисляет n!.
Входные данные:
На вход программе подается натуральное число n, (n≤12).
Выходные данные:
Программа должна вывести единственное число в соответствии с условием задачи. 
Примечание. Факториалом натурального числа n, называется произведение всех натуральных чисел от 1 до n, 
то есть n!=1*2*3*…*n  """
n = int(input())
total = 1
for i in range(2, n + 1):
    total *= i
print(total)

# 112. Без нулей
""" Напишите программу, которая считывает 10 чисел и выводит произведение отличных от нуля чисел.
Формат входных данных:
На вход программе подаются 10 целых чисел, каждое на отдельной строке.
Формат выходных данных:
Программа должна вывести произведение отличных от нуля чисел. 
Примечание 1. Гарантируется, что хотя бы одно из 10 чисел является ненулевым.
Примечание 2. Отличные от нуля числа – те числа, которые не равны нулю. """
total = 1
for i in range(10):
    num = int(input())
    if num != 0:
        total *= num
print(total)

# 113. Сумма делителей
""" На вход программе подается натуральное число n. Напишите программу, которая вычисляет сумму всех его делителей.
Входные данные:
На вход программе подается натуральное число n.
Выходные данные:
Программа должна вывести единственное число в соответствии с условием задачи.
Примечание. Функция подсчета суммы всех делителей числа является очень важной в теории чисел. """
n = int(input())
total = 0
for i in range(1, n + 1):
    if n % i == 0:
        total += i
print(total)

# 114. Знакочередующаяся сумма
""" На вход программе подается натуральное число n. 
Напишите программу вычисления знакочередующей суммы: 1−2+3−4+5−6+…+(-1)**n+1 * n
Входные данные:
На вход программе подается натуральное число n.
Выходные данные:
Программа должна вывести единственное число в соответствии с условием задачи.
Примечание. Рассмотрим более подробно 2-й тест. Для числа n=5 у нас будет такая сумма: 1−2+3−4+5=3. """
n = int(input())
total = 0
for i in range(1, n + 1):
    if i % 2 == 0:
        total -= i
    elif i % 2 != 0:
        total += i
print(total)

# 115. Наибольшие числа
""" На вход программе подается натуральное число n, а затем n различных натуральных чисел последовательности, каждое на отдельной строке. 
Напишите программу, которая выводит наибольшее и второе наибольшее число последовательности.
Формат входных данных:
На вход программе подаются натуральное число n≥2, а затем n различных натуральных чисел, каждое на отдельной строке.
Формат выходных данных:
Программа должна вывести два наибольших числа, каждое на отдельной строке. """

n = int(input())
largest1 = 0
largest2 = 0
for i in range(n):
    num = int(input())
    if num > largest1:
        largest2 = largest1
        largest1 = num 
    elif num > largest2:
        largest2 = num
print(largest1)
print(largest2)


# 116. Only even numbers 
""" Напишите программу, которая считывает последовательность из 10 целых чисел и определяет, является ли каждое из них четным или нет.
Формат входных данных:
На вход программе подаются 10 целых чисел, каждое на отдельной строке.
Формат выходных данных:
Программа должна вывести строку «YES», если все числа четные, и «NO» в ином случае. """

total = 0
for i in range(10):
    num = int(input())
    if num % 2 == 0:
        total += 1
if total == 10:
    print('YES')
else:
    print('NO')

# 117. Последовательность Фибоначчи
""" Напишите программу, которая считывает натуральное число n и выводит первые n чисел последовательности Фибоначчи.
Формат входных данных:
На вход программе подается одно число n (n≤100) – количество членов последовательности.
Формат выходных данных:
Программа должна вывести члены последовательности Фибоначчи, отделенные символом пробела. 
Примечание. Последовательность Фибоначчи – это последовательность натуральных чисел, где каждое последующее 
число является суммой двух предыдущих: 1, 1, 2, 3, 5, 8, 13,  21, 34, 55, 89,…        """

n = int(input())
first = 1
second = 0
for i in range(n):
    fib = first + second
    print(fib, end=" ")
    first = second
    second = fib

# 118. До КОНЦА 1
""" На вход программе подается последовательность слов, каждое слово на отдельной строке. 
Концом последовательности является слово «КОНЕЦ» (без кавычек). 
При этом само слово «КОНЕЦ» не входит в последовательность, лишь символизируя её окончание. 
Напишите программу, которая выводит члены данной последовательности.
Формат входных данных:
На вход программе подается последовательность слов, каждое слово на отдельной строке.
Формат выходных данных:
Программа должна вывести члены данной последовательности. """
text = input()
while text != 'КОНЕЦ':
    print(text)
    text = input()

# 119. До КОНЦА 2
""" На вход программе подается последовательность слов, каждое слово на отдельной строке. 
Концом последовательности является слово «КОНЕЦ» или «конец» (большими или маленькими буквами, без кавычек). 
При этом сами слова «КОНЕЦ» и «конец» не входят в последовательность, лишь символизируя её окончание. 
Напишите программу, которая выводит члены данной последовательности.
Формат входных данных"
На вход программе подается последовательность слов, каждое слово на отдельной строке.
Формат выходных данных:
Программа должна вывести члены данной последовательности. """
text = input()
while text != 'КОНЕЦ' and text != 'конец':
    print(text)
    text = input()

# 120. Количество членов
""" На вход программе подается последовательность слов, каждое слово на отдельной строке. 
Концом последовательности является одно из трех слов: «стоп», «хватит», «достаточно» (маленькими буквами, без кавычек). 
Сами эти слова в последовательность не входят, лишь символизируя её окончание. 
Напишите программу, которая выводит общее количество членов данной последовательности.
Формат входных данных
На вход программе подается последовательность слов, каждое слово на отдельной строке.
Формат выходных данных
Программа должна вывести общее количество членов данной последовательности. """

text = input()
count = 0
while text != 'стоп' and text != 'хватит' and text != 'достаточно':
    count += 1
    text = input()
print(count)

# 121. Пока делимся
""" На вход программе подается последовательность целых чисел делящихся на 7, каждое число на отдельной строке. 
Концом последовательности является любое число, не делящееся на 7 (само это число в последовательность не входит, лишь символизируя её конец). 
Напишите программу, которая выводит члены данной последовательности.
Формат входных данных:
На вход программе подается последовательность чисел, каждое число на отдельной строке.
Формат выходных данных:
Программа должна вывести члены данной последовательности. """
num = int(input())
while num % 7 == 0:
    print(num)
    num = int(input())

#122. Сумма чисел
""" На вход программе подается последовательность целых чисел, каждое число на отдельной строке. Признаком окончания последовательности является любое отрицательное число, при этом в саму последовательность оно не входит. Напишите программу, которая выводит сумму всех членов данной последовательности.
Формат входных данных
На вход программе подается последовательность чисел, каждое число на отдельной строке.
Формат выходных данных
Программа должна вывести сумму членов данной последовательности.
Примечание. Число 0 не является признаком окончания последовательности. """
num = int(input())
total = 0
while num >= 0:
    total += num
    num = int(input())
print(total) 

# 123. Количество пятерок
""" На вход программе подается последовательность целых чисел от 1 до 5, характеризующее оценку ученика, каждое число на отдельной строке. 
Концом последовательности является любое неположительное число либо число, большее 5. Напишите программу, которая выводит количество пятерок.
Формат входных данных:
На вход программе подается последовательность чисел, каждое число на отдельной строке.
Формат выходных данных:
Программа должна вывести количество пятерок.
Примечание. Не забываем, что неположительными числами являются все отрицательные числа и число 0. """
num = int(input())
count = 0
while num <= 5 and num > 0:
    if num == 5:
        count += 1
    num = int(input())
print(count)

# 124. Ведьмаку заплатите чеканной монетой
""" Всем известно, что ведьмак способен одолеть любых чудовищ, однако его услуги обойдутся недешево. 
К тому же ведьмак не принимает купюры, он принимает только чеканные монеты. 
В мире ведьмака существуют монеты с номиналами 1,5,10,25.
Напишите программу, которая определяет, какое минимальное количество чеканных монет нужно заплатить ведьмаку.
Формат входных данных:
На вход программе подается одно натуральное число - цена за услугу ведьмака.
Формат выходных данных:
Программа должна вывести минимально возможное количество чеканных монет для оплаты. """

sum_total = int(input())
count = 0
while sum_total >= 25:
    count += 1
    sum_total -= 25
while sum_total >= 10:
    count += 1
    sum_total -= 10
while sum_total >= 5:
    count += 1
    sum_total -= 5
while sum_total >= 1:
    count += 1
    sum_total -= 1
print(count)

# 125. Обратный порядок 1
""" Дано натуральное число. Напишите программу, которая выводит его цифры в столбик в обратном порядке.
Формат входных данных:
На вход программе подается одно натуральное число.
Формат выходных данных:
Программа должна вывести цифры введенного числа в столбик в обратном порядке. """
num = int(input())
while num != 0:  # пока в числе есть цифры
    last_digit = num % 10  # получить последнюю цифру
    print(last_digit)
    num = num // 10  # удалить последнюю цифру из числа

# 126. Обратный порядок 2
""" Дано натуральное число. Напишите программу, которая меняет порядок цифр числа на обратный.
Формат входных данных:
На вход программе подается одно натуральное число.
Формат выходных данных:
Программа должна вывести число, записанное в обратном порядке. """
num = int(input())
while num != 0:
    last_digit = num % 10
    print(last_digit, end='')
    num = num // 10

# 127. max и min
Дано натуральное число n, (n ≥ 10). 
Напишите программу, которая определяет его максимальную и минимальную цифры.
Формат входных данных:
На вход программе подается одно натуральное число.
Формат выходных данных:
Программа должна вывести максимальную и минимальную цифры введенного числа (с поясняющей надписью).

num = int(input())
min_digit = 9
max_digit = 0
while num != 0:
    last_digit = num % 10
    if last_digit > max_digit:
        max_digit = last_digit
    if last_digit < min_digit:
        min_digit = last_digit
    num = num // 10  
print('Максимальная цифра равна', max_digit) 
print('Минимальная цифра равна', min_digit)

# 128. Все вместе !!!!!!!!!!!!!!
""" Дано натуральное число. Напишите программу, которая вычисляет:
- сумму его цифр;
- количество цифр в нем;
- произведение его цифр;
- среднее арифметическое его цифр;
- его первую цифру;
- сумму его первой и последней цифры.
Формат входных данных:
На вход программе подается одно натуральное число.
Формат выходных данных:
Программа должна вывести значения указанных величин в указанном порядке. """

num = int(input())
num_copy = num
last_digit1 = num % 10
counter = 0
total_sum = 0
total_product = 1
while num != 0:
    last_digit = num % 10
    counter += 1
    total_sum += last_digit
    total_product *= last_digit
    num = num // 10

firtst_digit = num_copy // (10 ** (counter -1))    
print(total_sum)
print(counter)
print(total_product)
print(total_sum / counter)
print(firtst_digit)
print(firtst_digit + last_digit1)


# 129. Вторая цифра
""" Дано натуральное число n (n > 9). Напишите программу, которая определяет его вторую (с начала) цифру.
Формат входных данных:
На вход программе подается одно натуральное число, состоящее как минимум из двух цифр.
Формат выходных данных:
Программа должна вывести его вторую (с начала) цифру. """

num = int(input())
num_copy = num
counter = 0
while num != 0:
    counter += 1
    num = num // 10
second_digit = (num_copy // (10 ** (counter -2))) % 10
print(second_digit)

# 130. Одинаковые цифры
""" Дано натуральное число. 
Напишите программу, которая определяет, состоит ли указанное число из одинаковых цифр.
Формат входных данных:
На вход программе подается одно натуральное число.
Формат выходных данных:
Программа должна вывести «YES» если число состоит из одинаковых цифр и «NO» в противном случае. """

num = int(input())
flag = True
last_digit1 = num % 10
while num != 0:
    last_digit = num % 10
    if last_digit != last_digit1:
        flag = False
    num = num // 10

if flag == False:
    print('NO')
else:
    print('YES')

# 131. Упорядоченные цифры 🌶
""" Дано натуральное число. 
Напишите программу, которая определяет, является ли последовательность его цифр при просмотре справа налево 
упорядоченной по неубыванию.
Формат входных данных:
На вход программе подается одно натуральное число.
Формат выходных данных:
Программа должна вывести «YES» если последовательность его цифр при просмотре справа налево является упорядоченной по неубыванию и «NO» в противном случае. """

num = int(input())
flag = True
while num // 10 > 0:
    last_digit = num % 10
    prelast_digit = (num // 10) % 10
    if last_digit > prelast_digit:
        flag = False
    num = num // 10
    
if flag == False:
    print('NO')
else:
    print('YES')

# 132. Что покажет приведенный ниже фрагмент кода?
for i in range(10):
    print(i, end='*')
    if i > 6:
        break

# Ответ: 0*1*2*3*4*5*6*7*

# 133. Что покажет приведенный ниже фрагмент кода?
i = 100
while i > 0:
    if i == 40:
        break
    print(i, end='*')
    i -= 20

# Ответ:  100*80*60*

# 134. Что покажет приведенный ниже фрагмент кода?
n = 10
while n > 0:
    n -= 1
    if n == 2:
        continue
    print(n, end='*')

# Ответ:  9*8*7*6*5*4*3*1*0*

# 135. Что покажет приведенный ниже фрагмент кода?
result = 0
for i in range(10):
    if i % 2 == 0:
        continue
    result += i

print(result)

# Ответ: 25

# 136.  Что покажет приведенный ниже фрагмент кода?
mult = 1
for i in range(1, 11):
   if i % 2 == 0:
      continue
   if i % 9 == 0:
      break
   mult *= i
print(mult)

# Ответ: 105

# 137. Наименьший делитель
""" На вход программе подается число n > 1. 
Напишите программу, которая выводит его наименьший отличный от 1 делитель.
Формат входных данных:
На вход программе подается одно натуральное число n.
Формат выходных данных:
Программа должна вывести наименьший делитель отличный от 1. 
Примечание. Используйте оператор break при обнаружении делителя. """
n = int(input())
for i in range(2, n + 1):
    if n % i == 0:
        print(i)
        break

# 138. Следуй правилам
""" На вход программе подается натуральное число n. 
Напишите программу, которая выводит числа от 1 до n включительно за исключением:
- чисел от 5 до 9 включительно;
- чисел от 17 до 37 включительно;
- чисел от 78 до 87 включительно. 
Формат входных данных:
На вход программе подается одно натуральное число n.
Формат выходных данных:
Программа должна вывести числа в соответствии с условием задачи, каждое на отдельной строке.
Примечание. Используйте оператор continue. """
n = int(input())
for i in range(1, n + 1):
    if 5 <= i <= 9 or 17 <= i <= 37 or 78 <= i <= 87:
        continue
    print(i)

# 139. Ревью кода-1
""" На обработку поступает последовательность из 10 целых чисел (каждое на отдельной строке). 
Нужно написать программу, которая выводит на экран количество неотрицательных чисел последовательности и их произведение. 
Если неотрицательных чисел нет, требуется вывести на экран «NO». Программист торопился и написал программу неправильно. 
Найдите все ошибки в этой программе (их ровно 4).
Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк.
Примечание. При необходимости вы можете добавить необходимые строки кода. """

# Исходный вариант кода:
count = 0
p = 0
for i in range(1, 10):
    x = int(input())
    if x > 0:
        p = p * x
        count = count + 1
if count > 0:
    print(x)
    print(p)
else:
    print('NO')

# Исправленный вариант кода:
count = 0
p = 1
for i in range(1, 11):
    x = int(input())
    if x >= 0:
        p = p * x
        count = count + 1
if count > 0:
    print(count)
    print(p)
else:
    print('NO')

# 140. Ревью кода-2
""" На обработку поступает последовательность из 10 целых чисел (каждое на отдельной строке). 
Известно, что вводимые числа по абсолютной величине не превышают 106. 
Нужно написать программу, которая выводит на экран сумму всех отрицательных чисел последовательности и 
максимальное отрицательное число в последовательности. Если отрицательных чисел нет, требуется вывести на 
экран «NO». Программист торопился и написал программу неправильно.
Найдите все ошибки в этой программе (их ровно 5). 
Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк.
Примечание. При необходимости вы можете добавить необходимые строки кода. """

# Исходный вариант кода:
mx = 0
s = 0
for i in range(11):
    x = int(input())
    if x < 0:
        s = x
    if x > mx:
        mx = x
print(s)
print(mx)

# Исправленный вариант кода:
mx = -10 ** 6
total = 0
for i in range(10):
    x = int(input())
    if x < 0:
        total += x
    if x > mx and x < 0:
        mx = x
if total == 0:
    print('NO')
else:
    print(total)
    print(mx)

# 141. Ревью кода-3
""" На обработку поступает последовательность из 7 целых чисел (каждое на отдельной строке). 
Нужно написать программу, которая подсчитывает и выводит сумму всех чётных чисел последовательности или 0, 
если чётных чисел в последовательности нет. 
Программист торопился и написал программу неправильно.
Найдите все ошибки в этой программе (их ровно 4). Известно, что каждая ошибка затрагивает только одну строку и 
может быть исправлена без изменения других строк. 
Примечание. При необходимости вы можете добавить необходимые строки кода. """

# Исходный вариант кода:
s = 1
for i in range(1, 7):
    n = input()
    if i % 2 == 0:
        s = s + n
print(s)

# Исправленный вариант кода:
total_sum = 0
for i in range(7):
    n = int(input())
    if n % 2 == 0:
        total_sum += n
print(total_sum)

# 142. Ревью кода-4
""" На обработку поступает натуральное число. 
Нужно написать программу, которая выводит на экран максимальную цифру числа, кратную 3. 
Если в числе нет цифр, кратных 3, требуется на экран вывести «NO». 
Программист торопился и написал программу неправильно.
Найдите все ошибки в этой программе (их ровно 5). 
Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк.
Примечание 1. Число 0 делится на любое натуральное число.
Примечание 2. При необходимости вы можете добавить нужные строки кода. """

# Исходный вариант кода:
n = int(input())
max_digit = n % 10
while n > 0:
    digit = n % 10
    if digit % 3 == 0:
        if digit < max_digit:
            digit = max_digit
    n = n % 10
if max_digit == 0:
    print('NO')
else:
    print(max_digit)

# Исправленный вариант кода:
n = int(input())
max_digit_3 = -1 # 0
while n != 0:
    digit = n % 10
    if digit % 3 == 0:
        if digit > max_digit_3:
            max_digit_3 = digit
    n = n // 10
if max_digit_3 < 0:
    print('NO')
else:
    print(max_digit_3)

# 143. Ревью кода-5
""" На обработку поступает натуральное число. 
Нужно написать программу, которая выводит на экран его первую (старшую) цифру. 
Программист торопился и написал программу неправильно.
Найдите все ошибки в этой программе (их ровно 2). 
Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк. """
# Исходный вариант кода:
n = int(input())
while n > 0:
    n %= 10
print(n)

# Исправленный вариант кода:
n = int(input())
while n > 9:
    n = n // 10
print(n)

# 144. Ревью кода-6
""" На обработку поступает натуральное число. 
Нужно написать программу, которая выводит на экран произведение цифр введенного числа. 
Программист торопился и написал программу неправильно.
Найдите все ошибки в этой программе (их ровно 3). 
Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк.
"""
# Исходный вариант кода:
n = input()
product = n % 10
while n >= 10:
    digit = n % 10
    product = product * digit
    n //= 10
print(product)

# Исправленный вариант кода:
n = int(input())
product = 1
while n != 0:
    digit = n % 10
    product = product * digit
    n //= 10
print(product)



# =============== ВЛОЖЕННЫЕ ЦИКЛЫ ================

# 145. Установите в каком порядке, указанный вложенный цикл выведет пары чисел (i, j). 
for i in range(1, 4):
    for j in range(3, 6):
        print(i, j)
# Ответ: 1,3; 1,4; 1,5;    2,3; 2,4; 2,5;     3,3; 3,4; 3,5.

# 146. Что покажет приведенный ниже фрагмент кода?
for i in range(1, 4):
    for j in range(3, 5):
        print(i + j, end='')
# Ответ: 455667.

# 147. Что покажет приведенный ниже фрагмент кода?
counter = 0
for i in range(99, 102):
    temp = i
    while temp > 0:
        counter += 1
        temp //= 10
print(counter)
# Ответ: 8

# 148. Таблица-1
""" Дано натуральное число n (n≤ 9). 
Напишите программу, которая печатает таблицу размером n×3, состоящую из данного числа (числа отделены одним пробелом).
Формат входных данных:
На вход программе подается одно натуральное число.
Формат выходных данных:
Программа должна вывести таблицу размером n×3, состоящую из данного числа.
Примечание. В конце строки может быть пробел. """

n = int(input())
for i in range(n):
    for j in range(3):
        print(n, end=' ')
    print()

# 149. Таблица-2
""" Дано натуральное число n (n≤ 9). 
Напишите программу, которая печатает таблицу размером n×5, где в i-ой строке указано число i (числа отделены одним пробелом).
Формат входных данных:
На вход программе подается одно натуральное число.
Формат выходных данных:
Программа должна вывести таблицу размером n×5 в соответствии с условием.
Примечание. В конце строки может быть пробел. """

n = int(input())
for i in range(1, n + 1):
    for j in range(5):
        print(i, end=' ')
    print()	

# 150. Таблица-3
""" Дано натуральное число n (n≤ 9). 
Напишите программу, которая печатает таблицу сложения для всех чисел от 1 до n (включительно) в соответствии с примером.
Формат входных данных:
На вход программе подается одно натуральное число.
Формат выходных данных:
Программа должна вывести таблицу сложения для всех чисел от 1 до n.
Примечание 1. Таблицу сложения подразумеваем от 1 до 9 (включительно).
Примечание 2. В конце строки может быть пробел. """

n = int(input())
for i in range(1, n + 1):
    for j in range(1, 10):
        print(i, '+', j, '=', i + j)
    print()

# 151. Звездный треугольник 🌶🌶
""" Дано нечетное натуральное число n. 
Напишите программу, которая печатает равнобедренный звездный треугольник с основанием, равным n в соответствии с примером:
*
**
***
****
***
**
*
Формат входных данных:
На вход программе подается одно нечетное натуральное число.
Формат выходных данных:
Программа должна вывести треугольник в соответствии с условием.
Примечание. Используйте вложенный цикл for. """

n = int(input())
mid = n // 2 + 1
for i in range(1, mid + 1):
    for j in range(i):
        print('*', end='')
    print()
for k in range(mid - 1, 0, -1):
    for m in range(k):
        print('*', end='')
    print()

# 152. Численный треугольник 1
""" Дано натуральное число n. Напишите программу, которая печатает численный треугольник в соответствии с примером:
1
22
333
4444
55555
...
Формат входных данных:
На вход программе подается одно натуральное число.
Формат выходных данных:
Программа должна вывести треугольник в соответствии с условием.
Примечание. Используйте вложенный цикл for. """

n = int(input())
for i in range(1, n + 1):
    for j in range(i):
        print(i, end='')
    print()


# ============== СТРОКОВЫЙ ТИП ДАННЫХ ===============

# 153. Что покажет приведенный ниже фрагмент кода?
s = 'abcdefg'
print(s[0] + s[2] + s[4] + s[6])

# Ответ: aceg

# 154. Что покажет приведенный ниже фрагмент кода?
s = 'abcdefg'
print(s[0]*3 + s[-1]*3 + s[3]*2 + s[3]*2)

# Ответ: aaagggdddd

# 155. Что покажет приведенный ниже фрагмент кода?
s = '01234567891011121314151617'
for i in range(0, len(s), 5):
    print(s[i], end='')

# Ответ: 051217

# 156. Дополните приведенный код, используя индексатор, так чтобы он вывел символ запятой.
s = "In 2010, someone paid 10k Bitcoin for two pizzas."
print(s[])

# Ответ: print(s[7])

# 157. Дополните приведенный код, используя индексатор, так чтобы он вывел символ w.
s = "In 2010, someone paid 10k Bitcoin for two pizzas."
print(s[])

# Ответ: print(s[-10])

# 158. В столбик 1
""" На вход программе подается одна строка. 
Напишите программу, которая выводит элементы строки с индексами 0, 2, 4, ... в столбик.
Формат входных данных:
На вход программе подается одна строка.
Формат выходных данных:
Программа должна вывести элементы строки с индексами 0, 2, 4, ..., каждое на отдельной строке. """

str = input()
for i in range(0, len(str), 2):
    print(str[i])


# 159. В столбик 2
""" На вход программе подается одна строка. Напишите программу, которая выводит в столбик элементы строки в обратном порядке.
Формат входных данных:
На вход программе подается одна строка.
Формат выходных данных:
Программа должна вывести в столбик элементы строки в обратном порядке. """

str = input()
for i in range(len(str) - 1, - 1, -1):
    print(str[i])


# 160. ФИО
""" На вход программе подаются три строки: имя, фамилия и отчество (именно в таком порядке). 
Напишите программу, которая выводит инициалы человека.
Формат входных данных:
На вход программе подаются три строки, каждая на отдельной строке.
Формат выходных данных:
Программа должна вывести ФИО человека. 
Примечание. Гарантируется, что имя, фамилия и отчество начинаются с заглавной буквы. """

name = input()
lastname = input()
fathername = input()
print(lastname[0], name[0], fathername[0], sep='')


# 161. Цифра 1
""" На вход программе подается одна строка состоящая из цифр. Напишите программу, которая считает сумму цифр данной строки.
Формат входных данных:
На вход программе подается одна строка состоящая из цифр.
Формат выходных данных:
Программа должна вывести сумму цифр данной строки. """
str = input()
total = 0
for i in range(len(str)):
    total += int(str[i])
print(total)

# 162. Цифра 2
""" На вход программе подается одна строка. 
Напишите программу, которая выводит сообщение «Цифра» (без кавычек), если строка содержит цифру. 
В противном случае вывести сообщение «Цифр нет» (без кавычек).
Формат входных данных:
На вход программе подается одна строка.
Формат выходных данных:
Программа должна вывести текст в соответствии с условием задачи. """
str = input()
flag = False
for i in range(len(str)):
    if str[i] in '0123456789':
        flag = True
if flag:
    print('Цифра')
else:
    print('Цифр нет')

# 163. Сколько раз?
""" На вход программе подается одна строка. 
Напишите программу, которая определяет, сколько раз в строке встречаются символы + и *.
Формат входных данных:
На вход программе подается одна строка.
Формат выходных данных:
Программа должна вывести сколько раз встречаются символы + и * в строке. """
str1 = input()
total_plus = 0
total_aster = 0
for i in range(len(str1)):
    if str1[i] == '+':
        total_plus += 1
    elif str1[i] == '*':
        total_aster += 1
print('Символ ' + '+ встречается ' + str(total_plus) + ' раз')        
print('Символ ' + '* встречается ' + str(total_aster) + ' раз')

# 164. Одинаковые соседи
""" На вход программе подается одна строка. 
Напишите программу, которая определяет сколько в ней одинаковых соседних символов.
Формат входных данных:
На вход программе подается одна строка.
Формат выходных данных:
Программа должна вывести количество одинаковых соседних символов. """
text = input()
total = 0
prev_char = text[0]
for i in range(len(text) - 1):
    if text[i] == text[i + 1]:
        total += 1
print(total)

# 165. Гласные и согласные
""" На вход программе подается одна строка с буквами русского языка. 
Напишите программу, которая определяет количество гласных и согласных звуков.
Формат входных данных:
На вход программе подается одна строка.
Формат выходных данных:
Программа должна вывести количество гласных и согласных звуков. 
Примечание: 
В русском языке 9 букв, передающих гласные звуки, и 21 буква, передающая согласные звуки (букву ё игнорируем):
Гласные: ауоыиэяюе 
Согласные: бвгджзйклмнпрстфхцчшщ  """
text = input()
total_vowels = 0 # гласные
total_consonant = 0 # согласные
for i in range(len(text) - 1):
    if text[i] in 'ауоыиэяюеАУОЫИЭЯЮЕ':
        total_vowels += 1
    elif text[i] in 'бвгджзйклмнпрстфхцчшщБВГДЖЗЙКЛМНПРСТФХЦЧШЩ':
        total_consonant += 1
print('Количество гласных букв равно', total_vowels)
print('Количество согласных букв равно', total_consonant)

# 166. Decimal to Binary
""" На вход программе подается натуральное число, записанное в десятичной системе счисления. 
Напишите программу, которая переводит данное число в двоичную систему счисления.
Формат входных данных:
На вход программе подается одно натуральное число.
Формат выходных данных:
Программа должна вывести число записанное в двоичной системе счисления. """

n = int(input())
result_str = ''
while n != 0:
    last_digit = n % 2
    n = n // 2
    result_str += str(last_digit)
res = ''
for i in range(len(result_str) - 1, -1, -1):
    res += result_str[i]
print(res)



# ================ СРЕЗЫ ================ #

#167. Что покажет приведенный ниже фрагмент кода?
s = 'abcdefg'
print(s[2:5])
